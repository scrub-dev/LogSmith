<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Styles/colour.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <Style TargetType="{x:Type Button}" x:Key="RemoveDefaultBehaviourButton">
        <Setter Property="FontFamily" Value="/Fonts/#Poppins"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="{TemplateBinding Border.CornerRadius}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding Background}">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="{x:Type RadioButton}" x:Key="MenuButton">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="{TemplateBinding Background}">
                            <ContentControl Content="{TemplateBinding Content}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background"  Value="Transparent"/>
            <Setter Property="BorderThickness"  Value="0"/>
            <Setter Property="Foreground"  Value="#f1f1f1"/>
            <Setter Property="FontFamily"  Value="/Fonts/#Poppins"/>
            <Setter Property="FontWeight"  Value="Light"/>
            <Setter Property="Height" Value="50"/>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="#FF202030"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF28283C"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ButtonClose" TargetType="{x:Type Button}" BasedOn="{StaticResource RemoveDefaultBehaviourButton}">
        <Setter Property="Border.CornerRadius" Value="10,0,0,0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource failure}"/>
                <Setter Property="Background" Value="{StaticResource failure}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource failure-dark}"/>
                <Setter Property="Background" Value="{StaticResource failure-dark}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ButtonMinimise" TargetType="{x:Type Button}" BasedOn="{StaticResource RemoveDefaultBehaviourButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource background-light}"/>
                <Setter Property="Background" Value="{StaticResource background-light}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource background}"/>
                <Setter Property="Background" Value="{StaticResource background}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>